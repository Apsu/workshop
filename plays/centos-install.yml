---

- name: Create a Virtual Machine
  hosts: guests
  user: root

  ### Can't gather facts from a machine that does not exist
  gather_facts: false

  tasks:
### Create a logical volume for storage
  - action: lvol vg=${storage} lv=lv_${inventory_hostname}_root size=10240
    delegate_to: ${host}

### Create a virtual machine
  - action: file dest=/tmp/vm-${inventory_hostname} state=directory
    delegate_to: ${host}
  - action: template src=../templates/vm.xml dest=/tmp/vm-${inventory_hostname}/vm.xml
    delegate_to: ${host}
  - action: virt_guest guest=${inventory_hostname} src=/tmp/vm-${inventory_hostname}/vm.xml
    delegate_to: ${host}
    register: guest

  - local_action: group_by key=${guest.provisioning_status}

- name: Install a minimal CentOS
  hosts: unprovisioned
  gather_facts: false
  user: root
  tasks:
### Prepare a kickstart file
  - action: file dest=${kickstart_path} state=directory
    delegate_to: ${host}
  - action: template src=../templates/centos-6.ks dest=${kickstart_path}/${inventory_hostname}.ks
    delegate_to: ${host}

### Boot the VM using the ISO image
  - action: virt_boot guest=${inventory_hostname} kernel=${kernel} initrd=${initrd} cmdline="linux  ks=http://${kickstart_http}/${inventory_hostname}.ks"
    delegate_to: ${host}

### Wait for kickstart to finish
  - action: wait_for host=${ip} port=22 state=started
    delegate_to: ${host}

  - action: wait_for host=${ip} port=22 state=stopped timeout=3600
    delegate_to: ${host}

  - local_action: pause seconds=60

- name: Start the Virtual Machines
  hosts: guests
  user: root

  ### Can't gather facts from a machine that does not exist
  gather_facts: false

  tasks:
  - action: virt_boot guest=${inventory_hostname} boot=hd
    delegate_to: ${host}
    tags:
    - post_install

  - action: wait_for host=${ip} port=22 state=started
    delegate_to: ${host}
    tags:
    - post_install

  - local_action: lineinfile dest=/etc/hosts regexp=" ${inventory_hostname}$" line="${ip} ${inventory_hostname}"
    tags:
    - post_install
